/*
 * This file is generated by jOOQ.
 */
package com.example;


import com.example.tables.Address;
import com.example.tables.Prefecture;
import com.example.tables.Role;
import com.example.tables.User;
import com.example.tables.records.AddressRecord;
import com.example.tables.records.PrefectureRecord;
import com.example.tables.records.RoleRecord;
import com.example.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.ULong;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>work</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<UserRecord, ULong> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AddressRecord> KEY_ADDRESS_PRIMARY = UniqueKeys0.KEY_ADDRESS_PRIMARY;
    public static final UniqueKey<PrefectureRecord> KEY_PREFECTURE_PRIMARY = UniqueKeys0.KEY_PREFECTURE_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_UQ1 = UniqueKeys0.KEY_ROLE_UQ1;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_UQ1 = UniqueKeys0.KEY_USER_UQ1;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AddressRecord, PrefectureRecord> ADDRESS_IBFK_1 = ForeignKeys0.ADDRESS_IBFK_1;
    public static final ForeignKey<UserRecord, RoleRecord> USER_IBFK_1 = ForeignKeys0.USER_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<UserRecord, ULong> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.USER_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AddressRecord> KEY_ADDRESS_PRIMARY = Internal.createUniqueKey(Address.ADDRESS, "KEY_address_PRIMARY", Address.ADDRESS.PREFECTURE_CD, Address.ADDRESS.CITY_CD, Address.ADDRESS.TOWN_STREET_CD);
        public static final UniqueKey<PrefectureRecord> KEY_PREFECTURE_PRIMARY = Internal.createUniqueKey(Prefecture.PREFECTURE, "KEY_prefecture_PRIMARY", Prefecture.PREFECTURE.PREFECTURE_CD);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", Role.ROLE.ROLE_CD);
        public static final UniqueKey<RoleRecord> KEY_ROLE_UQ1 = Internal.createUniqueKey(Role.ROLE, "KEY_role_uq1", Role.ROLE.ROLE_NAME);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.USER_ID);
        public static final UniqueKey<UserRecord> KEY_USER_UQ1 = Internal.createUniqueKey(User.USER, "KEY_user_uq1", User.USER.USER_NAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AddressRecord, PrefectureRecord> ADDRESS_IBFK_1 = Internal.createForeignKey(com.example.Keys.KEY_PREFECTURE_PRIMARY, Address.ADDRESS, "address_ibfk_1", Address.ADDRESS.PREFECTURE_CD);
        public static final ForeignKey<UserRecord, RoleRecord> USER_IBFK_1 = Internal.createForeignKey(com.example.Keys.KEY_ROLE_PRIMARY, User.USER, "user_ibfk_1", User.USER.ROLE_CD);
    }
}
